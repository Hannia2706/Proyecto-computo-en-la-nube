import sqlite3
import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

conn = sqlite3.connect('quepeliculamegusta.sql')
query = "SELECT * FROM peliculas"
df = pd.read_sql_query(query, conn)
conn.close()

if 'id' in df.columns:
    df = df.drop('id', axis=1)

calificaciones = df.drop('Titulo', axis=1)
similitud_peliculas = cosine_similarity(calificaciones)

def recomendar_peliculas(peliculas_calificaciones, n=6):
    input_df = pd.DataFrame(peliculas_calificaciones, columns=['Titulo', 'Calificacion'])
    peliculas_gustadas = input_df[input_df['Calificacion'] > 0]['Titulo']
    calificaciones_avg = input_df.groupby('Titulo')['Calificacion'].mean()
    calificaciones_usuario = calificaciones_avg.reindex(df['Titulo']).fillna(0)
    sim_scores = np.dot(similitud_peliculas, calificaciones_usuario)
    peliculas_vistas = input_df['Titulo']
    idx_not_vistas = ~df['Titulo'].isin(peliculas_vistas)
    idx_sorted = np.argsort(sim_scores)[::-1]
    idx_recomendadas = [i for i in idx_sorted if idx_not_vistas[i]][:n]
    return df.loc[idx_recomendadas, 'Titulo']

entrada_usuario = [('Titanic', 1), ('Batman', 2), ('Superman', 0)]
recomendaciones = recomendar_peliculas(entrada_usuario)
print("Pel√≠culas recomendadas:")
print(recomendaciones)
